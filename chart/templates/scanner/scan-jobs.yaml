{{- define "scanjob.jobSpec" }}
template:
  spec:
    restartPolicy: OnFailure
    containers:
      - name: {{ .name }}
        image: {{ default .root.Values.scanJobs.image .image }}
        imagePullPolicy: {{ default (default "IfNotPresent" .root.Values.scanJobs.imagePullPolicy) .imagePullPolicy }}
        {{- if or .workingDir .root.Values.scanJobs.workingDir }}
        workingDir: {{ default .root.Values.scanJobs.workingDir .workingDir }}
        {{- end }}
        {{- if .command }}
        command:
          {{- toYaml .command | nindent 10 }}
        {{- end }}
        {{- if .args }}
        args:
          {{- toYaml .args | nindent 10 }}
        {{- end }}
        env:
          - name: API_KEY
            valueFrom:
              secretKeyRef:
                  name: api-key
                  key: API_KEY
          - name: MOUNT_PATH
            value: {{ .root.Values.sharedStorage.mountPath | quote }}
          {{- if .env }}
          {{- toYaml .env | nindent 10 }}
          {{- end }}
        {{- if .resources }}
        resources:
          {{- toYaml .resources | nindent 10 }}
        {{- end }}
        volumeMounts:
          - name: shared-storage
            mountPath: {{ .root.Values.sharedStorage.mountPath }}
    volumes:
      - name: shared-storage
        persistentVolumeClaim:
          claimName: {{ .root.Values.sharedStorage.name }}
{{- end }}
{{- if and .Values.scanJobs.enabled .Values.sharedStorage.enabled }}
{{- range $index, $job := .Values.scanJobs.jobs }}
  {{- if $job.schedule }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ $job.name }}
spec:
  schedule: {{ $job.schedule | quote }}
  jobTemplate:
    spec:
      {{- include "scanjob.jobSpec" (dict
        "name" $job.name
        "image" $job.image
        "imagePullPolicy" $job.imagePullPolicy
        "workingDir" $job.workingDir
        "command" $job.command
        "args" $job.args
        "env" $job.env
        "resources" $job.resources
        "root" $
      ) | nindent 6 }}
  {{- end }}

  {{- if $job.init_run }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-%s-%d" $job.name $.Release.Name $.Release.Revision | trunc 63 | trimSuffix "-" }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  {{- include "scanjob.jobSpec" (dict
    "name" $job.name
    "image" $job.image
    "imagePullPolicy" $job.imagePullPolicy
    "workingDir" $job.workingDir
    "command" $job.command
    "args" $job.args
    "env" $job.env
    "resources" $job.resources
    "root" $
  ) | nindent 2 }}
  {{- end }}
{{- end }}
{{- end }}
